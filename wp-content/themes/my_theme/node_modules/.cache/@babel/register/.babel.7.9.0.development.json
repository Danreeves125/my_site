{
  "{\"sourceRoot\":\"/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme\",\"filename\":\"/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme",
      "filename": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// yarn add --dev gulp gulp-sass gulp-rename gulp-uglify gulp-concat gulp-cssnano es6-promise gulp-watch gulp-ex-replace gulp-error-handle gulp-sourcemaps\nvar gulp = require('gulp'),\n    sass = require('gulp-sass'),\n    rename = require('gulp-rename'),\n    uglify = require('gulp-uglify'),\n    concat = require('gulp-concat'),\n    cssnano = require('gulp-cssnano'),\n    watch = require('gulp-watch'),\n    errorHandler = require('gulp-error-handle'),\n    sourcemaps = require('gulp-sourcemaps'),\n    ext_replace = require('gulp-ex-replace'),\n    babel = require('gulp-babel'); // function change() {\n//     return gulp.src([\n//         // \"node_modules/overlayscrollbars/css/OverlayScrollbars.css\",\n//         'node_modules/normalize.css/normalize.css',\n//     ])\n//         .pipe(ext_replace('.scss'))\n//         .pipe(gulp.dest('src/scss/node-imports'))\n// }\n// function fontAwesome() {\n//     return gulp.src(\n//         'node_modules/@fortawesome/fontawesome-pro/webfonts/**.*'\n//     )\n//         .pipe(gulp.dest('assets/fonts/webfonts'));\n// }\n\n\nfunction styles() {\n  return gulp.src('src/scss/app.scss').pipe(sass({\n    outputStyle: 'compressed' // if css compressed **file size**\n\n  }).on('error', sass.logError)) // .pipe(cssnano({ zindex: false }))\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(gulp.dest('dist/css'));\n}\n\nfunction scripts() {\n  return gulp.src([// 'node_modules/jquery-parallax.js/parallax.js',\n  // 'node_modules/tippy.js/dist/tippy.cjs.js',\n  // 'node_modules/@rqrauhvmra/tobi/js/tobi.min.js',\n  // 'node_modules/choices.js/public/assets/scripts/choices.js',\n  // 'node_modules/swiper/js/swiper.js',\n  // 'assets/js/custom/sliders.js',\n  // 'assets/js/custom/select2.js',\n  'src/js/active/*.js']).pipe(babel()).pipe(concat('main.js')).pipe(rename({\n    suffix: '.min'\n  })).pipe(errorHandler()) // .pipe(uglify())\n  .pipe(gulp.dest('dist/js/'));\n}\n\nfunction watchFiles() {\n  gulp.watch('src/scss/**/*.scss', gulp.series('styles'));\n  gulp.watch('src/js/active/*.js', gulp.series('scripts'));\n}\n\ngulp.task('scripts', scripts);\ngulp.task('styles', styles); // gulp.task('fontAwesome', fontAwesome);\n// gulp.task('change', change);\n\ngulp.task('default', gulp.parallel(scripts, styles));\ngulp.task(\"watch\", function () {\n  watchFiles();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwic2FzcyIsInJlbmFtZSIsInVnbGlmeSIsImNvbmNhdCIsImNzc25hbm8iLCJ3YXRjaCIsImVycm9ySGFuZGxlciIsInNvdXJjZW1hcHMiLCJleHRfcmVwbGFjZSIsImJhYmVsIiwic3R5bGVzIiwic3JjIiwicGlwZSIsIm91dHB1dFN0eWxlIiwib24iLCJsb2dFcnJvciIsInN1ZmZpeCIsImRlc3QiLCJzY3JpcHRzIiwid2F0Y2hGaWxlcyIsInNlcmllcyIsInRhc2siLCJwYXJhbGxlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBLElBQUlBLElBQUksR0FBV0MsT0FBTyxDQUFDLE1BQUQsQ0FBMUI7QUFBQSxJQUNJQyxJQUFJLEdBQVdELE9BQU8sQ0FBQyxXQUFELENBRDFCO0FBQUEsSUFFSUUsTUFBTSxHQUFTRixPQUFPLENBQUMsYUFBRCxDQUYxQjtBQUFBLElBR0lHLE1BQU0sR0FBU0gsT0FBTyxDQUFDLGFBQUQsQ0FIMUI7QUFBQSxJQUlJSSxNQUFNLEdBQVNKLE9BQU8sQ0FBQyxhQUFELENBSjFCO0FBQUEsSUFLSUssT0FBTyxHQUFRTCxPQUFPLENBQUMsY0FBRCxDQUwxQjtBQUFBLElBTUlNLEtBQUssR0FBVU4sT0FBTyxDQUFDLFlBQUQsQ0FOMUI7QUFBQSxJQU9JTyxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxtQkFBRCxDQVAxQjtBQUFBLElBUUlRLFVBQVUsR0FBR1IsT0FBTyxDQUFDLGlCQUFELENBUnhCO0FBQUEsSUFTSVMsV0FBVyxHQUFJVCxPQUFPLENBQUMsaUJBQUQsQ0FUMUI7QUFBQSxJQVVJVSxLQUFLLEdBQUlWLE9BQU8sQ0FBQyxZQUFELENBVnBCLEMsQ0FZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxTQUFTVyxNQUFULEdBQWtCO0FBQ2QsU0FBT1osSUFBSSxDQUFDYSxHQUFMLENBQVMsbUJBQVQsRUFDRkMsSUFERSxDQUNHWixJQUFJLENBQUM7QUFDUGEsSUFBQUEsV0FBVyxFQUFFLFlBRE4sQ0FDbUI7O0FBRG5CLEdBQUQsQ0FBSixDQUVIQyxFQUZHLENBRUEsT0FGQSxFQUVTZCxJQUFJLENBQUNlLFFBRmQsQ0FESCxFQUlIO0FBSkcsR0FLRkgsSUFMRSxDQUtHWCxNQUFNLENBQUM7QUFBRWUsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FBRCxDQUxULEVBTUZKLElBTkUsQ0FNR2QsSUFBSSxDQUFDbUIsSUFBTCxDQUFVLFVBQVYsQ0FOSCxDQUFQO0FBT0g7O0FBRUQsU0FBU0MsT0FBVCxHQUFtQjtBQUNmLFNBQU9wQixJQUFJLENBQUNhLEdBQUwsQ0FBUyxDQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBUlksQ0FBVCxFQVVGQyxJQVZFLENBVUdILEtBQUssRUFWUixFQVdGRyxJQVhFLENBV0dULE1BQU0sQ0FBQyxTQUFELENBWFQsRUFZRlMsSUFaRSxDQVlHWCxNQUFNLENBQUM7QUFBRWUsSUFBQUEsTUFBTSxFQUFFO0FBQVYsR0FBRCxDQVpULEVBYUZKLElBYkUsQ0FhR04sWUFBWSxFQWJmLEVBY0g7QUFkRyxHQWVGTSxJQWZFLENBZUdkLElBQUksQ0FBQ21CLElBQUwsQ0FBVSxVQUFWLENBZkgsQ0FBUDtBQWdCSDs7QUFFRCxTQUFTRSxVQUFULEdBQXNCO0FBQ2xCckIsRUFBQUEsSUFBSSxDQUFDTyxLQUFMLENBQVcsb0JBQVgsRUFBaUNQLElBQUksQ0FBQ3NCLE1BQUwsQ0FBWSxRQUFaLENBQWpDO0FBQ0F0QixFQUFBQSxJQUFJLENBQUNPLEtBQUwsQ0FBVyxvQkFBWCxFQUFpQ1AsSUFBSSxDQUFDc0IsTUFBTCxDQUFZLFNBQVosQ0FBakM7QUFDSDs7QUFHRHRCLElBQUksQ0FBQ3VCLElBQUwsQ0FBVSxTQUFWLEVBQXFCSCxPQUFyQjtBQUNBcEIsSUFBSSxDQUFDdUIsSUFBTCxDQUFVLFFBQVYsRUFBb0JYLE1BQXBCLEUsQ0FDQTtBQUNBOztBQUVBWixJQUFJLENBQUN1QixJQUFMLENBQVUsU0FBVixFQUFxQnZCLElBQUksQ0FBQ3dCLFFBQUwsQ0FBY0osT0FBZCxFQUF1QlIsTUFBdkIsQ0FBckI7QUFFQVosSUFBSSxDQUFDdUIsSUFBTCxDQUFVLE9BQVYsRUFBbUIsWUFBWTtBQUMzQkYsRUFBQUEsVUFBVTtBQUNiLENBRkQiLCJzb3VyY2VSb290IjoiL0FwcGxpY2F0aW9ucy9NQU1QL2h0ZG9jcy9teV9zaXRlL3dwLWNvbnRlbnQvdGhlbWVzL215X3RoZW1lLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHlhcm4gYWRkIC0tZGV2IGd1bHAgZ3VscC1zYXNzIGd1bHAtcmVuYW1lIGd1bHAtdWdsaWZ5IGd1bHAtY29uY2F0IGd1bHAtY3NzbmFubyBlczYtcHJvbWlzZSBndWxwLXdhdGNoIGd1bHAtZXgtcmVwbGFjZSBndWxwLWVycm9yLWhhbmRsZSBndWxwLXNvdXJjZW1hcHNcblxudmFyIGd1bHAgICAgICAgICA9IHJlcXVpcmUoJ2d1bHAnKSxcbiAgICBzYXNzICAgICAgICAgPSByZXF1aXJlKCdndWxwLXNhc3MnKSxcbiAgICByZW5hbWUgICAgICAgPSByZXF1aXJlKCdndWxwLXJlbmFtZScpLFxuICAgIHVnbGlmeSAgICAgICA9IHJlcXVpcmUoJ2d1bHAtdWdsaWZ5JyksXG4gICAgY29uY2F0ICAgICAgID0gcmVxdWlyZSgnZ3VscC1jb25jYXQnKSxcbiAgICBjc3NuYW5vICAgICAgPSByZXF1aXJlKCdndWxwLWNzc25hbm8nKSxcbiAgICB3YXRjaCAgICAgICAgPSByZXF1aXJlKCdndWxwLXdhdGNoJyksXG4gICAgZXJyb3JIYW5kbGVyID0gcmVxdWlyZSgnZ3VscC1lcnJvci1oYW5kbGUnKSxcbiAgICBzb3VyY2VtYXBzID0gcmVxdWlyZSgnZ3VscC1zb3VyY2VtYXBzJyksXG4gICAgZXh0X3JlcGxhY2UgID0gcmVxdWlyZSgnZ3VscC1leC1yZXBsYWNlJyksXG4gICAgYmFiZWwgID0gcmVxdWlyZSgnZ3VscC1iYWJlbCcpO1xuXG4vLyBmdW5jdGlvbiBjaGFuZ2UoKSB7XG4vLyAgICAgcmV0dXJuIGd1bHAuc3JjKFtcbi8vICAgICAgICAgLy8gXCJub2RlX21vZHVsZXMvb3ZlcmxheXNjcm9sbGJhcnMvY3NzL092ZXJsYXlTY3JvbGxiYXJzLmNzc1wiLFxuLy8gICAgICAgICAnbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcycsXG4vLyAgICAgXSlcbi8vICAgICAgICAgLnBpcGUoZXh0X3JlcGxhY2UoJy5zY3NzJykpXG4vLyAgICAgICAgIC5waXBlKGd1bHAuZGVzdCgnc3JjL3Njc3Mvbm9kZS1pbXBvcnRzJykpXG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGZvbnRBd2Vzb21lKCkge1xuLy8gICAgIHJldHVybiBndWxwLnNyYyhcbi8vICAgICAgICAgJ25vZGVfbW9kdWxlcy9AZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtcHJvL3dlYmZvbnRzLyoqLionXG4vLyAgICAgKVxuLy8gICAgICAgICAucGlwZShndWxwLmRlc3QoJ2Fzc2V0cy9mb250cy93ZWJmb250cycpKTtcbi8vIH1cblxuZnVuY3Rpb24gc3R5bGVzKCkge1xuICAgIHJldHVybiBndWxwLnNyYygnc3JjL3Njc3MvYXBwLnNjc3MnKVxuICAgICAgICAucGlwZShzYXNzKHtcbiAgICAgICAgICAgIG91dHB1dFN0eWxlOiAnY29tcHJlc3NlZCcgLy8gaWYgY3NzIGNvbXByZXNzZWQgKipmaWxlIHNpemUqKlxuICAgICAgICB9KS5vbignZXJyb3InLCBzYXNzLmxvZ0Vycm9yKSlcbiAgICAgICAgLy8gLnBpcGUoY3NzbmFubyh7IHppbmRleDogZmFsc2UgfSkpXG4gICAgICAgIC5waXBlKHJlbmFtZSh7IHN1ZmZpeDogJy5taW4nIH0pKVxuICAgICAgICAucGlwZShndWxwLmRlc3QoJ2Rpc3QvY3NzJykpO1xufVxuXG5mdW5jdGlvbiBzY3JpcHRzKCkge1xuICAgIHJldHVybiBndWxwLnNyYyhbXG4gICAgICAgIC8vICdub2RlX21vZHVsZXMvanF1ZXJ5LXBhcmFsbGF4LmpzL3BhcmFsbGF4LmpzJyxcbiAgICAgICAgLy8gJ25vZGVfbW9kdWxlcy90aXBweS5qcy9kaXN0L3RpcHB5LmNqcy5qcycsXG4gICAgICAgIC8vICdub2RlX21vZHVsZXMvQHJxcmF1aHZtcmEvdG9iaS9qcy90b2JpLm1pbi5qcycsXG4gICAgICAgIC8vICdub2RlX21vZHVsZXMvY2hvaWNlcy5qcy9wdWJsaWMvYXNzZXRzL3NjcmlwdHMvY2hvaWNlcy5qcycsXG4gICAgICAgIC8vICdub2RlX21vZHVsZXMvc3dpcGVyL2pzL3N3aXBlci5qcycsXG4gICAgICAgIC8vICdhc3NldHMvanMvY3VzdG9tL3NsaWRlcnMuanMnLFxuICAgICAgICAvLyAnYXNzZXRzL2pzL2N1c3RvbS9zZWxlY3QyLmpzJyxcbiAgICAgICAgJ3NyYy9qcy9hY3RpdmUvKi5qcydcbiAgICBdKVxuICAgICAgICAucGlwZShiYWJlbCgpKVxuICAgICAgICAucGlwZShjb25jYXQoJ21haW4uanMnKSlcbiAgICAgICAgLnBpcGUocmVuYW1lKHsgc3VmZml4OiAnLm1pbicgfSkpXG4gICAgICAgIC5waXBlKGVycm9ySGFuZGxlcigpKVxuICAgICAgICAvLyAucGlwZSh1Z2xpZnkoKSlcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KCdkaXN0L2pzLycpKTtcbn1cblxuZnVuY3Rpb24gd2F0Y2hGaWxlcygpIHtcbiAgICBndWxwLndhdGNoKCdzcmMvc2Nzcy8qKi8qLnNjc3MnLCBndWxwLnNlcmllcygnc3R5bGVzJykpO1xuICAgIGd1bHAud2F0Y2goJ3NyYy9qcy9hY3RpdmUvKi5qcycsIGd1bHAuc2VyaWVzKCdzY3JpcHRzJykpO1xufVxuXG5cbmd1bHAudGFzaygnc2NyaXB0cycsIHNjcmlwdHMpO1xuZ3VscC50YXNrKCdzdHlsZXMnLCBzdHlsZXMpO1xuLy8gZ3VscC50YXNrKCdmb250QXdlc29tZScsIGZvbnRBd2Vzb21lKTtcbi8vIGd1bHAudGFzaygnY2hhbmdlJywgY2hhbmdlKTtcblxuZ3VscC50YXNrKCdkZWZhdWx0JywgZ3VscC5wYXJhbGxlbChzY3JpcHRzLCBzdHlsZXMpKTtcblxuZ3VscC50YXNrKFwid2F0Y2hcIiwgZnVuY3Rpb24gKCkge1xuICAgIHdhdGNoRmlsZXMoKVxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "sass",
        "rename",
        "uglify",
        "concat",
        "cssnano",
        "watch",
        "errorHandler",
        "sourcemaps",
        "ext_replace",
        "babel",
        "styles",
        "src",
        "pipe",
        "outputStyle",
        "on",
        "logError",
        "suffix",
        "dest",
        "scripts",
        "watchFiles",
        "series",
        "task",
        "parallel"
      ],
      "mappings": ";;AAAA;AAEA,IAAIA,IAAI,GAAWC,OAAO,CAAC,MAAD,CAA1B;AAAA,IACIC,IAAI,GAAWD,OAAO,CAAC,WAAD,CAD1B;AAAA,IAEIE,MAAM,GAASF,OAAO,CAAC,aAAD,CAF1B;AAAA,IAGIG,MAAM,GAASH,OAAO,CAAC,aAAD,CAH1B;AAAA,IAIII,MAAM,GAASJ,OAAO,CAAC,aAAD,CAJ1B;AAAA,IAKIK,OAAO,GAAQL,OAAO,CAAC,cAAD,CAL1B;AAAA,IAMIM,KAAK,GAAUN,OAAO,CAAC,YAAD,CAN1B;AAAA,IAOIO,YAAY,GAAGP,OAAO,CAAC,mBAAD,CAP1B;AAAA,IAQIQ,UAAU,GAAGR,OAAO,CAAC,iBAAD,CARxB;AAAA,IASIS,WAAW,GAAIT,OAAO,CAAC,iBAAD,CAT1B;AAAA,IAUIU,KAAK,GAAIV,OAAO,CAAC,YAAD,CAVpB,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASW,MAAT,GAAkB;AACd,SAAOZ,IAAI,CAACa,GAAL,CAAS,mBAAT,EACFC,IADE,CACGZ,IAAI,CAAC;AACPa,IAAAA,WAAW,EAAE,YADN,CACmB;;AADnB,GAAD,CAAJ,CAEHC,EAFG,CAEA,OAFA,EAESd,IAAI,CAACe,QAFd,CADH,EAIH;AAJG,GAKFH,IALE,CAKGX,MAAM,CAAC;AAAEe,IAAAA,MAAM,EAAE;AAAV,GAAD,CALT,EAMFJ,IANE,CAMGd,IAAI,CAACmB,IAAL,CAAU,UAAV,CANH,CAAP;AAOH;;AAED,SAASC,OAAT,GAAmB;AACf,SAAOpB,IAAI,CAACa,GAAL,CAAS,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBARY,CAAT,EAUFC,IAVE,CAUGH,KAAK,EAVR,EAWFG,IAXE,CAWGT,MAAM,CAAC,SAAD,CAXT,EAYFS,IAZE,CAYGX,MAAM,CAAC;AAAEe,IAAAA,MAAM,EAAE;AAAV,GAAD,CAZT,EAaFJ,IAbE,CAaGN,YAAY,EAbf,EAcH;AAdG,GAeFM,IAfE,CAeGd,IAAI,CAACmB,IAAL,CAAU,UAAV,CAfH,CAAP;AAgBH;;AAED,SAASE,UAAT,GAAsB;AAClBrB,EAAAA,IAAI,CAACO,KAAL,CAAW,oBAAX,EAAiCP,IAAI,CAACsB,MAAL,CAAY,QAAZ,CAAjC;AACAtB,EAAAA,IAAI,CAACO,KAAL,CAAW,oBAAX,EAAiCP,IAAI,CAACsB,MAAL,CAAY,SAAZ,CAAjC;AACH;;AAGDtB,IAAI,CAACuB,IAAL,CAAU,SAAV,EAAqBH,OAArB;AACApB,IAAI,CAACuB,IAAL,CAAU,QAAV,EAAoBX,MAApB,E,CACA;AACA;;AAEAZ,IAAI,CAACuB,IAAL,CAAU,SAAV,EAAqBvB,IAAI,CAACwB,QAAL,CAAcJ,OAAd,EAAuBR,MAAvB,CAArB;AAEAZ,IAAI,CAACuB,IAAL,CAAU,OAAV,EAAmB,YAAY;AAC3BF,EAAAA,UAAU;AACb,CAFD",
      "sourceRoot": "/Applications/MAMP/htdocs/my_site/wp-content/themes/my_theme/",
      "sourcesContent": [
        "// yarn add --dev gulp gulp-sass gulp-rename gulp-uglify gulp-concat gulp-cssnano es6-promise gulp-watch gulp-ex-replace gulp-error-handle gulp-sourcemaps\n\nvar gulp         = require('gulp'),\n    sass         = require('gulp-sass'),\n    rename       = require('gulp-rename'),\n    uglify       = require('gulp-uglify'),\n    concat       = require('gulp-concat'),\n    cssnano      = require('gulp-cssnano'),\n    watch        = require('gulp-watch'),\n    errorHandler = require('gulp-error-handle'),\n    sourcemaps = require('gulp-sourcemaps'),\n    ext_replace  = require('gulp-ex-replace'),\n    babel  = require('gulp-babel');\n\n// function change() {\n//     return gulp.src([\n//         // \"node_modules/overlayscrollbars/css/OverlayScrollbars.css\",\n//         'node_modules/normalize.css/normalize.css',\n//     ])\n//         .pipe(ext_replace('.scss'))\n//         .pipe(gulp.dest('src/scss/node-imports'))\n// }\n\n// function fontAwesome() {\n//     return gulp.src(\n//         'node_modules/@fortawesome/fontawesome-pro/webfonts/**.*'\n//     )\n//         .pipe(gulp.dest('assets/fonts/webfonts'));\n// }\n\nfunction styles() {\n    return gulp.src('src/scss/app.scss')\n        .pipe(sass({\n            outputStyle: 'compressed' // if css compressed **file size**\n        }).on('error', sass.logError))\n        // .pipe(cssnano({ zindex: false }))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(gulp.dest('dist/css'));\n}\n\nfunction scripts() {\n    return gulp.src([\n        // 'node_modules/jquery-parallax.js/parallax.js',\n        // 'node_modules/tippy.js/dist/tippy.cjs.js',\n        // 'node_modules/@rqrauhvmra/tobi/js/tobi.min.js',\n        // 'node_modules/choices.js/public/assets/scripts/choices.js',\n        // 'node_modules/swiper/js/swiper.js',\n        // 'assets/js/custom/sliders.js',\n        // 'assets/js/custom/select2.js',\n        'src/js/active/*.js'\n    ])\n        .pipe(babel())\n        .pipe(concat('main.js'))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(errorHandler())\n        // .pipe(uglify())\n        .pipe(gulp.dest('dist/js/'));\n}\n\nfunction watchFiles() {\n    gulp.watch('src/scss/**/*.scss', gulp.series('styles'));\n    gulp.watch('src/js/active/*.js', gulp.series('scripts'));\n}\n\n\ngulp.task('scripts', scripts);\ngulp.task('styles', styles);\n// gulp.task('fontAwesome', fontAwesome);\n// gulp.task('change', change);\n\ngulp.task('default', gulp.parallel(scripts, styles));\n\ngulp.task(\"watch\", function () {\n    watchFiles()\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586344920988
  }
}