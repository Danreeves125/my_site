@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        & {
            font-size: $min-font-size;
            @media screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
            @media screen and (min-width: $max-vw) {
                font-size: $max-font-size;
            }
        }
    }
}

.title {
    width: 100%;
    text-align: center;
    font-family: $primary;
    color: $coal;
    @include fluid-type($min_width, $max_width, $min_font, $max_font);
    text-transform: uppercase;
    font-weight: bold;
    padding: rem-calc(0 15 30 15);
    margin: rem-calc(0 0 45 0);
    position: relative;

    @include breakpoint(small only) {
        margin-bottom: rem-calc(30);
        padding-bottom: rem-calc(25);
    }

    &:before {
        content: '';
        width: rem-calc(85);
        height: rem-calc(6);
        background: linear-gradient(230deg, $blue 0%, $violet 100%);
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    &--white {
        color: #fff;

        &:before {
            background: $neon;
        }
    }
}

.dynamic {
    p, ul {
        font-family: $body;
        color: $coal;
        font-size: rem-calc(18);
        line-height: rem-calc(25);
        font-weight: 400;
        margin-bottom: rem-calc(10);

        @include fluid-type($min_width, $max_width, 16px, 18px);

        @include breakpoint(small only) {
            line-height: rem-calc(22);
        }

        &:last-child {
            margin-bottom: 0;
        }
    }
}
